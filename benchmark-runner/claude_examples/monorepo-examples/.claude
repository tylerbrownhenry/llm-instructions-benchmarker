{
  "workspace": {
    "type": "monorepo",
    "root": ".",
    "packages": [
      "packages/*",
      "apps/*"
    ],
    "package_manager": "pnpm"
  },

  "agents": [
    {
      "name": "frontend-apps",
      "description": "Manages React/Next.js applications",
      "scope": ["apps/web", "apps/mobile", "apps/admin"],
      "tools": ["Read", "Write", "Edit", "Bash"],
      "concurrent": true
    },
    {
      "name": "backend-services", 
      "description": "Manages Node.js microservices",
      "scope": ["apps/api", "apps/auth", "apps/notifications"],
      "tools": ["Read", "Write", "Edit", "Bash"],
      "concurrent": true
    },
    {
      "name": "shared-packages",
      "description": "Manages shared libraries and components",
      "scope": ["packages/ui", "packages/utils", "packages/types"],
      "tools": ["Read", "Write", "Edit", "Bash"],
      "concurrent": false
    }
  ],

  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_TOOL_INPUT_FILE_PATH\" == packages/* ]]; then pnpm build --filter=@repo/$(basename $(dirname \"$CLAUDE_TOOL_INPUT_FILE_PATH\")); fi"
          },
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_TOOL_INPUT_FILE_PATH\" == */package.json ]]; then pnpm install; fi"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "echo \"$(date): Running command in workspace $(pwd)\" >> .claude/workspace.log"
          }
        ]
      }
    ]
  },

  "workflows": {
    "full-stack-feature": {
      "description": "Implement feature across frontend, backend, and shared packages",
      "agents": ["frontend-apps", "backend-services", "shared-packages"],
      "sequential": false
    },
    "package-update": {
      "description": "Update shared package and propagate changes",
      "steps": [
        {"agent": "shared-packages", "action": "update"},
        {"command": "pnpm build --filter=packages/*"},
        {"command": "pnpm test --filter=apps/*"}
      ]
    }
  },

  "build": {
    "dependency_graph": true,
    "parallel_builds": true,
    "cache_enabled": true,
    "affected_only": true
  },

  "testing": {
    "parallel": true,
    "affected_tests": true,
    "coverage_aggregation": true
  }
}